#!/usr/bin/env node
/**
 * Skype API
 *
 * Copyright (c) 2013-2014 Vyacheslav Slinko
 * Licensed under the MIT License
 */


var skypeAPI = require('..');
var util = require('util');
var repl = require('repl');


var messages = [];
var skype = skypeAPI();

var mapping = {
    'help': function(args, callback) {
        callback(null, [
            'shift_messages',
            'get_chats',
            'get_chat CHAT_NAME',
            'get_user USER_NAME',
            'send_message CHAT_NAME MESSAGE'
        ]);
    },
    'shift_messages': function(args, callback) {
        callback(null, messages);
        messages = [];
    },
    'get_chats': function(args, callback) {
        skype.getChats(callback);
    },
    'get_chat': function(args, callback) {
        skype.getChat(args[0], callback);
    },
    'get_user': function(args, callback) {
        skype.getUser(args[0], callback);
    },
    'send_message': function(args, callback) {
        var chatName = args.shift();
        skype.sendMessage(chatName, args.join(' '), callback);
    }
};

skype.on('message', function(message) {
    messages.push(message);
});

skype.on('error', function(err) {
    console.error(err);
    process.exit(1);
});

skype.connect();

repl.start({
    prompt: 'skype> ',

    eval: function(cmd, context, filename, callback) {
        var args = cmd.slice(1, -2).split(' ');
        var method = args.shift();

        if (method.length === 0) {
            return callback();
        }

        if (mapping[method]) {
            mapping[method](args, function(err, res) {
                if (err) {
                    callback(new Error(err.message));
                } else {
                    callback(null, res);
                }
            });
        } else {
            callback(new Error('Unknown function ' + method));
        }
    }
});
